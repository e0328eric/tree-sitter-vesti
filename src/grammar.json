{
  "$schema": "https://tree-sitter.github.io/tree-sitter/assets/schemas/grammar.schema.json",
  "name": "vesti",
  "rules": {
    "vesti_content": {
      "type": "REPEAT1",
      "content": {
        "type": "SYMBOL",
        "name": "_statement"
      }
    },
    "_statement": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "docclass_decl"
        },
        {
          "type": "SYMBOL",
          "name": "singlepkg_decl"
        },
        {
          "type": "SYMBOL",
          "name": "multipkg_decl"
        },
        {
          "type": "SYMBOL",
          "name": "importmod_decl"
        },
        {
          "type": "SYMBOL",
          "name": "copyfile_decl"
        },
        {
          "type": "SYMBOL",
          "name": "importves_decl"
        },
        {
          "type": "SYMBOL",
          "name": "getfp_decl"
        },
        {
          "type": "SYMBOL",
          "name": "compile_type_decl"
        },
        {
          "type": "SYMBOL",
          "name": "useenv_decl"
        },
        {
          "type": "SYMBOL",
          "name": "begenv_decl"
        },
        {
          "type": "SYMBOL",
          "name": "endenv_decl"
        },
        {
          "type": "SYMBOL",
          "name": "defun_decl"
        },
        {
          "type": "SYMBOL",
          "name": "defenv_decl"
        },
        {
          "type": "SYMBOL",
          "name": "jlcode_block"
        },
        {
          "type": "SYMBOL",
          "name": "KEYWORD_useltx3"
        },
        {
          "type": "SYMBOL",
          "name": "KEYWORD_startdoc"
        },
        {
          "type": "SYMBOL",
          "name": "KEYWORD_makeatletter"
        },
        {
          "type": "SYMBOL",
          "name": "KEYWORD_makeatother"
        },
        {
          "type": "SYMBOL",
          "name": "KEYWORD_ltx3on"
        },
        {
          "type": "SYMBOL",
          "name": "KEYWORD_ltx3off"
        },
        {
          "type": "SYMBOL",
          "name": "attributes"
        },
        {
          "type": "SYMBOL",
          "name": "singleline_raw_latex"
        },
        {
          "type": "SYMBOL",
          "name": "multiline_raw_latex"
        },
        {
          "type": "SYMBOL",
          "name": "_text_content"
        }
      ]
    },
    "docclass_decl": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "KEYWORD_docclass"
        },
        {
          "type": "SYMBOL",
          "name": "class_pkg_name"
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SYMBOL",
              "name": "options"
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "PATTERN",
          "value": "\\r?\\n"
        }
      ]
    },
    "singlepkg_decl": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "KEYWORD_importpkg"
        },
        {
          "type": "SYMBOL",
          "name": "class_pkg_name"
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SYMBOL",
              "name": "options"
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "PATTERN",
          "value": "\\r?\\n"
        }
      ]
    },
    "multipkg_decl": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "KEYWORD_importpkg"
        },
        {
          "type": "STRING",
          "value": "{"
        },
        {
          "type": "SYMBOL",
          "name": "class_pkg_name"
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SYMBOL",
              "name": "options"
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "STRING",
                "value": ","
              },
              {
                "type": "CHOICE",
                "members": [
                  {
                    "type": "PATTERN",
                    "value": "\\r?\\n"
                  },
                  {
                    "type": "BLANK"
                  }
                ]
              },
              {
                "type": "SYMBOL",
                "name": "class_pkg_name"
              },
              {
                "type": "CHOICE",
                "members": [
                  {
                    "type": "SYMBOL",
                    "name": "options"
                  },
                  {
                    "type": "BLANK"
                  }
                ]
              }
            ]
          }
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "STRING",
              "value": ","
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "PATTERN",
              "value": "\\r?\\n"
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "STRING",
          "value": "}"
        }
      ]
    },
    "options": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "("
        },
        {
          "type": "SYMBOL",
          "name": "option_name"
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "STRING",
                "value": ","
              },
              {
                "type": "SYMBOL",
                "name": "option_name"
              }
            ]
          }
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "STRING",
              "value": ","
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "STRING",
          "value": ")"
        }
      ]
    },
    "class_pkg_name": {
      "type": "PATTERN",
      "value": "[\\w\\d-]+"
    },
    "option_name": {
      "type": "PATTERN",
      "value": "([^,()]|\\\\,|\\\\(|\\\\))+"
    },
    "importmod_decl": {
      "type": "PREC_RIGHT",
      "value": 2,
      "content": {
        "type": "SEQ",
        "members": [
          {
            "type": "SYMBOL",
            "name": "KEYWORD_importmod"
          },
          {
            "type": "STRING",
            "value": "("
          },
          {
            "type": "SYMBOL",
            "name": "filepath"
          },
          {
            "type": "STRING",
            "value": ")"
          }
        ]
      }
    },
    "copyfile_decl": {
      "type": "PREC_RIGHT",
      "value": 2,
      "content": {
        "type": "SEQ",
        "members": [
          {
            "type": "SYMBOL",
            "name": "KEYWORD_copyfile"
          },
          {
            "type": "STRING",
            "value": "("
          },
          {
            "type": "SYMBOL",
            "name": "filepath"
          },
          {
            "type": "STRING",
            "value": ")"
          }
        ]
      }
    },
    "importves_decl": {
      "type": "PREC_RIGHT",
      "value": 2,
      "content": {
        "type": "SEQ",
        "members": [
          {
            "type": "SYMBOL",
            "name": "KEYWORD_importves"
          },
          {
            "type": "STRING",
            "value": "("
          },
          {
            "type": "SYMBOL",
            "name": "filepath"
          },
          {
            "type": "STRING",
            "value": ")"
          }
        ]
      }
    },
    "getfp_decl": {
      "type": "PREC_RIGHT",
      "value": 2,
      "content": {
        "type": "SEQ",
        "members": [
          {
            "type": "SYMBOL",
            "name": "KEYWORD_getfp"
          },
          {
            "type": "STRING",
            "value": "("
          },
          {
            "type": "SYMBOL",
            "name": "filepath"
          },
          {
            "type": "STRING",
            "value": ")"
          }
        ]
      }
    },
    "compile_type_decl": {
      "type": "PREC_RIGHT",
      "value": 2,
      "content": {
        "type": "SEQ",
        "members": [
          {
            "type": "SYMBOL",
            "name": "KEYWORD_compty"
          },
          {
            "type": "STRING",
            "value": "("
          },
          {
            "type": "SYMBOL",
            "name": "filepath"
          },
          {
            "type": "STRING",
            "value": ")"
          }
        ]
      }
    },
    "useenv_decl": {
      "type": "PREC_RIGHT",
      "value": 1,
      "content": {
        "type": "SEQ",
        "members": [
          {
            "type": "SYMBOL",
            "name": "KEYWORD_useenv"
          },
          {
            "type": "SYMBOL",
            "name": "env_name"
          },
          {
            "type": "REPEAT",
            "content": {
              "type": "SYMBOL",
              "name": "env_arg"
            }
          },
          {
            "type": "SYMBOL",
            "name": "brace_group"
          }
        ]
      }
    },
    "begenv_decl": {
      "type": "PREC_RIGHT",
      "value": 1,
      "content": {
        "type": "SEQ",
        "members": [
          {
            "type": "SYMBOL",
            "name": "KEYWORD_begenv"
          },
          {
            "type": "SYMBOL",
            "name": "env_name"
          },
          {
            "type": "REPEAT",
            "content": {
              "type": "SYMBOL",
              "name": "env_arg"
            }
          }
        ]
      }
    },
    "endenv_decl": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "KEYWORD_endenv"
        },
        {
          "type": "SYMBOL",
          "name": "env_name"
        }
      ]
    },
    "env_arg": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "mandantory_arg"
        },
        {
          "type": "SYMBOL",
          "name": "optional_arg"
        }
      ]
    },
    "mandantory_arg": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "("
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "PATTERN",
            "value": "[^)]"
          }
        },
        {
          "type": "STRING",
          "value": ")"
        }
      ]
    },
    "optional_arg": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "["
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "PATTERN",
            "value": "[^\\]]"
          }
        },
        {
          "type": "STRING",
          "value": "]"
        }
      ]
    },
    "defenv_optional_arg": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "<"
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "PATTERN",
            "value": "[^>]"
          }
        },
        {
          "type": "STRING",
          "value": ">"
        }
      ]
    },
    "defun_decl": {
      "type": "PREC_RIGHT",
      "value": 1,
      "content": {
        "type": "SEQ",
        "members": [
          {
            "type": "SYMBOL",
            "name": "KEYWORD_defun"
          },
          {
            "type": "CHOICE",
            "members": [
              {
                "type": "SYMBOL",
                "name": "optional_arg"
              },
              {
                "type": "BLANK"
              }
            ]
          },
          {
            "type": "SYMBOL",
            "name": "env_name"
          },
          {
            "type": "SYMBOL",
            "name": "mandantory_arg"
          },
          {
            "type": "SYMBOL",
            "name": "brace_group"
          }
        ]
      }
    },
    "defenv_decl": {
      "type": "PREC_RIGHT",
      "value": 1,
      "content": {
        "type": "SEQ",
        "members": [
          {
            "type": "SYMBOL",
            "name": "KEYWORD_defenv"
          },
          {
            "type": "SYMBOL",
            "name": "env_name"
          },
          {
            "type": "CHOICE",
            "members": [
              {
                "type": "SYMBOL",
                "name": "optional_arg"
              },
              {
                "type": "BLANK"
              }
            ]
          },
          {
            "type": "CHOICE",
            "members": [
              {
                "type": "SYMBOL",
                "name": "defenv_optional_arg"
              },
              {
                "type": "BLANK"
              }
            ]
          },
          {
            "type": "SYMBOL",
            "name": "brace_group"
          },
          {
            "type": "SYMBOL",
            "name": "brace_group"
          }
        ]
      }
    },
    "jlcode_block": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "KEYWORD_jlcode"
        },
        {
          "type": "SYMBOL",
          "name": "jlcode_payload"
        },
        {
          "type": "SYMBOL",
          "name": "jlcode_end"
        }
      ]
    },
    "attributes": {
      "type": "PATTERN",
      "value": "#+[a-zA-Z0-9]+"
    },
    "KEYWORD_docclass": {
      "type": "TOKEN",
      "content": {
        "type": "STRING",
        "value": "docclass"
      }
    },
    "KEYWORD_importpkg": {
      "type": "TOKEN",
      "content": {
        "type": "STRING",
        "value": "importpkg"
      }
    },
    "KEYWORD_importmod": {
      "type": "TOKEN",
      "content": {
        "type": "STRING",
        "value": "importmod"
      }
    },
    "KEYWORD_copyfile": {
      "type": "TOKEN",
      "content": {
        "type": "STRING",
        "value": "cpfile"
      }
    },
    "KEYWORD_importves": {
      "type": "TOKEN",
      "content": {
        "type": "STRING",
        "value": "importves"
      }
    },
    "KEYWORD_useltx3": {
      "type": "TOKEN",
      "content": {
        "type": "STRING",
        "value": "useltx3"
      }
    },
    "KEYWORD_getfp": {
      "type": "TOKEN",
      "content": {
        "type": "STRING",
        "value": "getfp"
      }
    },
    "KEYWORD_startdoc": {
      "type": "TOKEN",
      "content": {
        "type": "STRING",
        "value": "startdoc"
      }
    },
    "KEYWORD_useenv": {
      "type": "TOKEN",
      "content": {
        "type": "STRING",
        "value": "useenv"
      }
    },
    "KEYWORD_begenv": {
      "type": "TOKEN",
      "content": {
        "type": "STRING",
        "value": "begenv"
      }
    },
    "KEYWORD_endenv": {
      "type": "TOKEN",
      "content": {
        "type": "STRING",
        "value": "endenv"
      }
    },
    "KEYWORD_defun": {
      "type": "TOKEN",
      "content": {
        "type": "STRING",
        "value": "defun"
      }
    },
    "KEYWORD_defenv": {
      "type": "TOKEN",
      "content": {
        "type": "STRING",
        "value": "defenv"
      }
    },
    "KEYWORD_makeatletter": {
      "type": "TOKEN",
      "content": {
        "type": "STRING",
        "value": "makeatletter"
      }
    },
    "KEYWORD_makeatother": {
      "type": "TOKEN",
      "content": {
        "type": "STRING",
        "value": "makeatother"
      }
    },
    "KEYWORD_ltx3on": {
      "type": "TOKEN",
      "content": {
        "type": "STRING",
        "value": "ltx3on"
      }
    },
    "KEYWORD_ltx3off": {
      "type": "TOKEN",
      "content": {
        "type": "STRING",
        "value": "ltx3off"
      }
    },
    "KEYWORD_compty": {
      "type": "TOKEN",
      "content": {
        "type": "STRING",
        "value": "compty"
      }
    },
    "KEYWORD_jlcode": {
      "type": "TOKEN",
      "content": {
        "type": "STRING",
        "value": "#jl:"
      }
    },
    "compile_type": {
      "type": "CHOICE",
      "members": [
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "plain"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "pdf"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "xe"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "lua"
          }
        }
      ]
    },
    "_text_content": {
      "type": "PREC_RIGHT",
      "value": 0,
      "content": {
        "type": "CHOICE",
        "members": [
          {
            "type": "SYMBOL",
            "name": "brace_group"
          },
          {
            "type": "SYMBOL",
            "name": "latex_function"
          },
          {
            "type": "SYMBOL",
            "name": "text"
          },
          {
            "type": "SYMBOL",
            "name": "_math"
          }
        ]
      }
    },
    "brace_group": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "{"
        },
        {
          "type": "SYMBOL",
          "name": "vesti_content"
        },
        {
          "type": "STRING",
          "value": "}"
        }
      ]
    },
    "_math": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "inline_math"
        },
        {
          "type": "SYMBOL",
          "name": "display_math"
        }
      ]
    },
    "inline_math": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "$"
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "PATTERN",
            "value": "[^$]"
          }
        },
        {
          "type": "STRING",
          "value": "$"
        }
      ]
    },
    "display_math": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "$$"
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "PATTERN",
            "value": "[^$]"
          }
        },
        {
          "type": "STRING",
          "value": "$$"
        }
      ]
    },
    "text": {
      "type": "PREC_RIGHT",
      "value": 0,
      "content": {
        "type": "REPEAT1",
        "content": {
          "type": "CHOICE",
          "members": [
            {
              "type": "SYMBOL",
              "name": "word"
            },
            {
              "type": "SYMBOL",
              "name": "delimiter"
            },
            {
              "type": "SYMBOL",
              "name": "subscript"
            },
            {
              "type": "SYMBOL",
              "name": "superscript"
            }
          ]
        }
      }
    },
    "word": {
      "type": "PATTERN",
      "value": "[^\\s\\\\%\\{\\}\\$\\#&_\\^]+"
    },
    "delimiter": {
      "type": "PATTERN",
      "value": "&"
    },
    "subscript": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "_"
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SYMBOL",
              "name": "brace_group"
            },
            {
              "type": "SYMBOL",
              "name": "letter"
            },
            {
              "type": "SYMBOL",
              "name": "latex_function"
            }
          ]
        }
      ]
    },
    "superscript": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "^"
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SYMBOL",
              "name": "brace_group"
            },
            {
              "type": "SYMBOL",
              "name": "letter"
            },
            {
              "type": "SYMBOL",
              "name": "latex_function"
            }
          ]
        }
      ]
    },
    "latex_function": {
      "type": "PREC_RIGHT",
      "value": 0,
      "content": {
        "type": "SEQ",
        "members": [
          {
            "type": "SYMBOL",
            "name": "latex_function_name"
          },
          {
            "type": "REPEAT",
            "content": {
              "type": "SYMBOL",
              "name": "brace_group"
            }
          }
        ]
      }
    },
    "latex_function_name": {
      "type": "PATTERN",
      "value": "\\\\([^\\r\\n]|[@a-zA-Z]+\\*?)?"
    },
    "letter": {
      "type": "PATTERN",
      "value": "[^\\\\%\\{\\}\\$\\#_\\^]"
    },
    "digit": {
      "type": "PATTERN",
      "value": "[0-9]"
    },
    "ascii_letter": {
      "type": "PATTERN",
      "value": "[A-Za-z]"
    },
    "filepath": {
      "type": "TOKEN",
      "content": {
        "type": "PATTERN",
        "value": "[\\p{L}@/\\.\\-_]+"
      }
    },
    "env_name": {
      "type": "TOKEN",
      "content": {
        "type": "PATTERN",
        "value": "[A-Za-z][A-Za-z0-9-]*(\\*)*"
      }
    },
    "singleline_raw_latex": {
      "type": "PATTERN",
      "value": "%#\\n|%#[^\\n]*\\n"
    },
    "multiline_raw_latex": {
      "type": "TOKEN",
      "content": {
        "type": "SEQ",
        "members": [
          {
            "type": "STRING",
            "value": "%-"
          },
          {
            "type": "PATTERN",
            "value": "[^-]*\\-+([^%-][^-]*\\-+)*"
          },
          {
            "type": "STRING",
            "value": "%"
          }
        ]
      }
    },
    "comment": {
      "type": "TOKEN",
      "content": {
        "type": "CHOICE",
        "members": [
          {
            "type": "PATTERN",
            "value": "%\\n|%[^#!*-][^\\n]*\\n"
          },
          {
            "type": "SEQ",
            "members": [
              {
                "type": "STRING",
                "value": "%*"
              },
              {
                "type": "PATTERN",
                "value": "[^*]*\\*+([^%*][^*]*\\*+)*"
              },
              {
                "type": "STRING",
                "value": "%"
              }
            ]
          }
        ]
      }
    }
  },
  "extras": [
    {
      "type": "PATTERN",
      "value": "\\s"
    },
    {
      "type": "SYMBOL",
      "name": "comment"
    }
  ],
  "conflicts": [],
  "precedences": [],
  "externals": [
    {
      "type": "SYMBOL",
      "name": "jlcode_payload"
    },
    {
      "type": "SYMBOL",
      "name": "jlcode_end"
    }
  ],
  "inline": [],
  "supertypes": [],
  "reserved": {}
}